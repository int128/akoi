package usecase

// Don't edit this file.
// This file is generated by gomic 0.5.5-0.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// Writer is a mock.
	Writer struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Write func(p []byte) (n int, err error)
		}
	}
)

// NewWriter returns Writer .
func NewWriter(t *testing.T, cb gomic.CallbackNotImplemented) *Writer {
	return &Writer{
		t: t, name: "Writer", callbackNotImplemented: cb}
}

// Write is a mock method.
func (mock Writer) Write(p []byte) (n int, err error) {
	methodName := "Write" // nolint: goconst
	if mock.impl.Write != nil {
		return mock.impl.Write(p)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroWrite(p)
}

// SetFuncWrite sets a method and returns the mock.
func (mock *Writer) SetFuncWrite(impl func(p []byte) (n int, err error)) *Writer {
	mock.impl.Write = impl
	return mock
}

// SetReturnWrite sets a fake method.
func (mock *Writer) SetReturnWrite(n int, err error) *Writer {
	mock.impl.Write = func([]byte) (int, error) {
		return n, err
	}
	return mock
}

// fakeZeroWrite is a fake method which returns zero values.
func (mock Writer) fakeZeroWrite(p []byte) (n int, err error) {
	return n, err
}
