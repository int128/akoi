package test

// Don't edit this file.
// This file is generated by gomic 0.5.5-0.
// https://github.com/suzuki-shunsuke/gomic

import (
	"context"
	"io"
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// Downloader is a mock.
	Downloader struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Download func(ctx context.Context, uri string, numOfDLPartitions int) (r0 io.ReadCloser, r1 error)
		}
	}
)

// NewDownloader returns Downloader .
func NewDownloader(t *testing.T, cb gomic.CallbackNotImplemented) *Downloader {
	return &Downloader{
		t: t, name: "Downloader", callbackNotImplemented: cb}
}

// Download is a mock method.
func (mock Downloader) Download(ctx context.Context, uri string, numOfDLPartitions int) (r0 io.ReadCloser, r1 error) {
	methodName := "Download" // nolint: goconst
	if mock.impl.Download != nil {
		return mock.impl.Download(ctx, uri, numOfDLPartitions)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroDownload(ctx, uri, numOfDLPartitions)
}

// SetFuncDownload sets a method and returns the mock.
func (mock *Downloader) SetFuncDownload(impl func(ctx context.Context, uri string, numOfDLPartitions int) (r0 io.ReadCloser, r1 error)) *Downloader {
	mock.impl.Download = impl
	return mock
}

// SetReturnDownload sets a fake method.
func (mock *Downloader) SetReturnDownload(r0 io.ReadCloser, r1 error) *Downloader {
	mock.impl.Download = func(context.Context, string, int) (io.ReadCloser, error) {
		return r0, r1
	}
	return mock
}

// fakeZeroDownload is a fake method which returns zero values.
func (mock Downloader) fakeZeroDownload(ctx context.Context, uri string, numOfDLPartitions int) (r0 io.ReadCloser, r1 error) {
	return r0, r1
}
