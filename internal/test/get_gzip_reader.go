package test

// Don't edit this file.
// This file is generated by gomic 0.5.5-0.
// https://github.com/suzuki-shunsuke/gomic

import (
	"io"
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// GetGzipReader is a mock.
	GetGzipReader struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Get func(p0 io.Reader) (r0 io.ReadCloser, r1 error)
		}
	}
)

// NewGetGzipReader returns GetGzipReader .
func NewGetGzipReader(t *testing.T, cb gomic.CallbackNotImplemented) *GetGzipReader {
	return &GetGzipReader{
		t: t, name: "GetGzipReader", callbackNotImplemented: cb}
}

// Get is a mock method.
func (mock GetGzipReader) Get(p0 io.Reader) (r0 io.ReadCloser, r1 error) {
	methodName := "Get" // nolint: goconst
	if mock.impl.Get != nil {
		return mock.impl.Get(p0)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroGet(p0)
}

// SetFuncGet sets a method and returns the mock.
func (mock *GetGzipReader) SetFuncGet(impl func(p0 io.Reader) (r0 io.ReadCloser, r1 error)) *GetGzipReader {
	mock.impl.Get = impl
	return mock
}

// SetReturnGet sets a fake method.
func (mock *GetGzipReader) SetReturnGet(r0 io.ReadCloser, r1 error) *GetGzipReader {
	mock.impl.Get = func(io.Reader) (io.ReadCloser, error) {
		return r0, r1
	}
	return mock
}

// fakeZeroGet is a fake method which returns zero values.
func (mock GetGzipReader) fakeZeroGet(p0 io.Reader) (r0 io.ReadCloser, r1 error) {
	return r0, r1
}
