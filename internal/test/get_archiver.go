package test

// Don't edit this file.
// This file is generated by gomic 0.5.5-0.
// https://github.com/suzuki-shunsuke/gomic

import (
	testing "testing"

	test "github.com/suzuki-shunsuke/akoi/internal/domain"
	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// GetArchiver is a mock.
	GetArchiver struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Get func(fpath, ftype string) (r0 test.Archiver)
		}
	}
)

// NewGetArchiver returns GetArchiver .
func NewGetArchiver(t *testing.T, cb gomic.CallbackNotImplemented) *GetArchiver {
	return &GetArchiver{
		t: t, name: "GetArchiver", callbackNotImplemented: cb}
}

// Get is a mock method.
func (mock GetArchiver) Get(fpath, ftype string) (r0 test.Archiver) {
	methodName := "Get" // nolint: goconst
	if mock.impl.Get != nil {
		return mock.impl.Get(fpath, ftype)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroGet(fpath, ftype)
}

// SetFuncGet sets a method and returns the mock.
func (mock *GetArchiver) SetFuncGet(impl func(fpath, ftype string) (r0 test.Archiver)) *GetArchiver {
	mock.impl.Get = impl
	return mock
}

// SetReturnGet sets a fake method.
func (mock *GetArchiver) SetReturnGet(r0 test.Archiver) *GetArchiver {
	mock.impl.Get = func(string, string) test.Archiver {
		return r0
	}
	return mock
}

// fakeZeroGet is a fake method which returns zero values.
func (mock GetArchiver) fakeZeroGet(fpath, ftype string) (r0 test.Archiver) {
	return r0
}
