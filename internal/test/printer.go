package test

// Don't edit this file.
// This file is generated by gomic 0.5.2.
// https://github.com/suzuki-shunsuke/gomic

import (
	"io"
	testing "testing"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// Printer is a mock.
	Printer struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Fprintf  func(w io.Writer, format string, a ...interface{}) (n int, err error)
			Fprintln func(w io.Writer, a ...interface{}) (n int, err error)
			Printf   func(format string, a ...interface{}) (n int, err error)
			Println  func(a ...interface{}) (n int, err error)
		}
	}
)

// NewPrinter returns Printer .
func NewPrinter(t *testing.T, cb gomic.CallbackNotImplemented) *Printer {
	return &Printer{
		t: t, name: "Printer", callbackNotImplemented: cb}
}

// Fprintf is a mock method.
func (mock Printer) Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error) {
	methodName := "Fprintf" // nolint: goconst
	if mock.impl.Fprintf != nil {
		return mock.impl.Fprintf(w, format, a...)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroFprintf(w, format, a...)
}

// SetFuncFprintf sets a method and returns the mock.
func (mock *Printer) SetFuncFprintf(impl func(w io.Writer, format string, a ...interface{}) (n int, err error)) *Printer {
	mock.impl.Fprintf = impl
	return mock
}

// SetReturnFprintf sets a fake method.
func (mock *Printer) SetReturnFprintf(n int, err error) *Printer {
	mock.impl.Fprintf = func(io.Writer, string, ...interface{}) (int, error) {
		return n, err
	}
	return mock
}

// fakeZeroFprintf is a fake method which returns zero values.
func (mock Printer) fakeZeroFprintf(w io.Writer, format string, a ...interface{}) (n int, err error) {
	return n, err
}

// Fprintln is a mock method.
func (mock Printer) Fprintln(w io.Writer, a ...interface{}) (n int, err error) {
	methodName := "Fprintln" // nolint: goconst
	if mock.impl.Fprintln != nil {
		return mock.impl.Fprintln(w, a...)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroFprintln(w, a...)
}

// SetFuncFprintln sets a method and returns the mock.
func (mock *Printer) SetFuncFprintln(impl func(w io.Writer, a ...interface{}) (n int, err error)) *Printer {
	mock.impl.Fprintln = impl
	return mock
}

// SetReturnFprintln sets a fake method.
func (mock *Printer) SetReturnFprintln(n int, err error) *Printer {
	mock.impl.Fprintln = func(io.Writer, ...interface{}) (int, error) {
		return n, err
	}
	return mock
}

// fakeZeroFprintln is a fake method which returns zero values.
func (mock Printer) fakeZeroFprintln(w io.Writer, a ...interface{}) (n int, err error) {
	return n, err
}

// Printf is a mock method.
func (mock Printer) Printf(format string, a ...interface{}) (n int, err error) {
	methodName := "Printf" // nolint: goconst
	if mock.impl.Printf != nil {
		return mock.impl.Printf(format, a...)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroPrintf(format, a...)
}

// SetFuncPrintf sets a method and returns the mock.
func (mock *Printer) SetFuncPrintf(impl func(format string, a ...interface{}) (n int, err error)) *Printer {
	mock.impl.Printf = impl
	return mock
}

// SetReturnPrintf sets a fake method.
func (mock *Printer) SetReturnPrintf(n int, err error) *Printer {
	mock.impl.Printf = func(string, ...interface{}) (int, error) {
		return n, err
	}
	return mock
}

// fakeZeroPrintf is a fake method which returns zero values.
func (mock Printer) fakeZeroPrintf(format string, a ...interface{}) (n int, err error) {
	return n, err
}

// Println is a mock method.
func (mock Printer) Println(a ...interface{}) (n int, err error) {
	methodName := "Println" // nolint: goconst
	if mock.impl.Println != nil {
		return mock.impl.Println(a...)
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroPrintln(a...)
}

// SetFuncPrintln sets a method and returns the mock.
func (mock *Printer) SetFuncPrintln(impl func(a ...interface{}) (n int, err error)) *Printer {
	mock.impl.Println = impl
	return mock
}

// SetReturnPrintln sets a fake method.
func (mock *Printer) SetReturnPrintln(n int, err error) *Printer {
	mock.impl.Println = func(...interface{}) (int, error) {
		return n, err
	}
	return mock
}

// fakeZeroPrintln is a fake method which returns zero values.
func (mock Printer) fakeZeroPrintln(a ...interface{}) (n int, err error) {
	return n, err
}
