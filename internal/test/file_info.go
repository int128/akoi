package test

// Don't edit this file.
// This file is generated by gomic 0.5.2.
// https://github.com/suzuki-shunsuke/gomic

import (
	os "os"
	testing "testing"
	"time"

	gomic "github.com/suzuki-shunsuke/gomic/gomic"
)

type (
	// FileInfo is a mock.
	FileInfo struct {
		t                      *testing.T
		name                   string
		callbackNotImplemented gomic.CallbackNotImplemented
		impl                   struct {
			Name    func() string
			Size    func() int64
			Mode    func() os.FileMode
			ModTime func() time.Time
			IsDir   func() bool
			Sys     func() interface{}
		}
	}
)

// NewFileInfo returns FileInfo .
func NewFileInfo(t *testing.T, cb gomic.CallbackNotImplemented) *FileInfo {
	return &FileInfo{
		t: t, name: "FileInfo", callbackNotImplemented: cb}
}

// Name is a mock method.
func (mock FileInfo) Name() string {
	methodName := "Name" // nolint: goconst
	if mock.impl.Name != nil {
		return mock.impl.Name()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroName()
}

// SetFuncName sets a method and returns the mock.
func (mock *FileInfo) SetFuncName(impl func() string) *FileInfo {
	mock.impl.Name = impl
	return mock
}

// SetReturnName sets a fake method.
func (mock *FileInfo) SetReturnName(r0 string) *FileInfo {
	mock.impl.Name = func() string {
		return r0
	}
	return mock
}

// fakeZeroName is a fake method which returns zero values.
func (mock FileInfo) fakeZeroName() string {
	var (
		r0 string
	)
	return r0
}

// Size is a mock method.
func (mock FileInfo) Size() int64 {
	methodName := "Size" // nolint: goconst
	if mock.impl.Size != nil {
		return mock.impl.Size()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroSize()
}

// SetFuncSize sets a method and returns the mock.
func (mock *FileInfo) SetFuncSize(impl func() int64) *FileInfo {
	mock.impl.Size = impl
	return mock
}

// SetReturnSize sets a fake method.
func (mock *FileInfo) SetReturnSize(r0 int64) *FileInfo {
	mock.impl.Size = func() int64 {
		return r0
	}
	return mock
}

// fakeZeroSize is a fake method which returns zero values.
func (mock FileInfo) fakeZeroSize() int64 {
	var (
		r0 int64
	)
	return r0
}

// Mode is a mock method.
func (mock FileInfo) Mode() os.FileMode {
	methodName := "Mode" // nolint: goconst
	if mock.impl.Mode != nil {
		return mock.impl.Mode()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroMode()
}

// SetFuncMode sets a method and returns the mock.
func (mock *FileInfo) SetFuncMode(impl func() os.FileMode) *FileInfo {
	mock.impl.Mode = impl
	return mock
}

// SetReturnMode sets a fake method.
func (mock *FileInfo) SetReturnMode(r0 os.FileMode) *FileInfo {
	mock.impl.Mode = func() os.FileMode {
		return r0
	}
	return mock
}

// fakeZeroMode is a fake method which returns zero values.
func (mock FileInfo) fakeZeroMode() os.FileMode {
	var (
		r0 os.FileMode
	)
	return r0
}

// ModTime is a mock method.
func (mock FileInfo) ModTime() time.Time {
	methodName := "ModTime" // nolint: goconst
	if mock.impl.ModTime != nil {
		return mock.impl.ModTime()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroModTime()
}

// SetFuncModTime sets a method and returns the mock.
func (mock *FileInfo) SetFuncModTime(impl func() time.Time) *FileInfo {
	mock.impl.ModTime = impl
	return mock
}

// SetReturnModTime sets a fake method.
func (mock *FileInfo) SetReturnModTime(r0 time.Time) *FileInfo {
	mock.impl.ModTime = func() time.Time {
		return r0
	}
	return mock
}

// fakeZeroModTime is a fake method which returns zero values.
func (mock FileInfo) fakeZeroModTime() time.Time {
	var (
		r0 time.Time
	)
	return r0
}

// IsDir is a mock method.
func (mock FileInfo) IsDir() bool {
	methodName := "IsDir" // nolint: goconst
	if mock.impl.IsDir != nil {
		return mock.impl.IsDir()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroIsDir()
}

// SetFuncIsDir sets a method and returns the mock.
func (mock *FileInfo) SetFuncIsDir(impl func() bool) *FileInfo {
	mock.impl.IsDir = impl
	return mock
}

// SetReturnIsDir sets a fake method.
func (mock *FileInfo) SetReturnIsDir(r0 bool) *FileInfo {
	mock.impl.IsDir = func() bool {
		return r0
	}
	return mock
}

// fakeZeroIsDir is a fake method which returns zero values.
func (mock FileInfo) fakeZeroIsDir() bool {
	var (
		r0 bool
	)
	return r0
}

// Sys is a mock method.
func (mock FileInfo) Sys() interface{} {
	methodName := "Sys" // nolint: goconst
	if mock.impl.Sys != nil {
		return mock.impl.Sys()
	}
	if mock.callbackNotImplemented != nil {
		mock.callbackNotImplemented(mock.t, mock.name, methodName)
	} else {
		gomic.DefaultCallbackNotImplemented(mock.t, mock.name, methodName)
	}
	return mock.fakeZeroSys()
}

// SetFuncSys sets a method and returns the mock.
func (mock *FileInfo) SetFuncSys(impl func() interface{}) *FileInfo {
	mock.impl.Sys = impl
	return mock
}

// SetReturnSys sets a fake method.
func (mock *FileInfo) SetReturnSys(r0 interface{}) *FileInfo {
	mock.impl.Sys = func() interface{} {
		return r0
	}
	return mock
}

// fakeZeroSys is a fake method which returns zero values.
func (mock FileInfo) fakeZeroSys() interface{} {
	var (
		r0 interface{}
	)
	return r0
}
